name: Django CI

on:
  push:
    branches: [ "develop" ]
  pull_request: 
    branches: [ "main", "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      DJANGO_DEBUG: ${{ secrets.DJANGO_DEBUG }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      FTP_USER: ${{ secrets.FTP_USER }}
      FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
      WAS_HOST: ${{ secrets.WAS_HOST }}
      CHATGPT_API_KEY: ${{ secrets.CHATGPT_API_KEY }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

# Create .env file은 docker-compose up -d 를 위해 존재함
      - name: Create .env file
        run: |
          echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" > .env
          echo "DJANGO_DEBUG=${{ secrets.DJANGO_DEBUG }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "FTP_USER=${{ secrets.FTP_USER }}" >> .env
          echo "FTP_PASSWORD=${{ secrets.FTP_PASSWORD }}" >> .env
          echo "WAS_HOST=${{ secrets.WAS_HOST }}" >> .env
          echo "CHATGPT_API_KEY=${{ secrets.CHATGPT_API_KEY }}" >> .env
          echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> .env
      - name: Print working directory
        run: pwd

      - name: Print ls
        run: ls /home/runner/work/
      - name: Build Docker images
        run: docker-compose -f ./docker-compose.yml build

      - name: Push Docker images
        run: docker-compose -f ./docker-compose.yml push

  run:
    needs: build
    runs-on: ubuntu-latest
    env: 
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      DJANGO_DEBUG: ${{ secrets.DJANGO_DEBUG }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      FTP_USER: ${{ secrets.FTP_USER }}
      FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
      WAS_HOST: ${{ secrets.WAS_HOST }}
      CHATGPT_API_KEY: ${{ secrets.CHATGPT_API_KEY }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Check if .env file exists
        run: |
          if [ -f ".env" ]; then
            echo ".env file exists."
          else
            echo ".env file does not exist."
          fi
      - name: Copy docker-compose.yml and .env to WAS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.WAS_HOST }}
          username: ${{ secrets.WAS_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.WAS_SSH_PORT }}
          source: |
            ./docker-compose.yml
            ./.env
          target: "/home/ubuntu/kingwangjjang/"
      - name: Connect to WAS & Execute Application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.WAS_HOST }}
          username: ${{ secrets.WAS_USERNAME }}
          key: ${{secrets.SSH_KEY}}
          port: ${{ secrets.WAS_SSH_PORT }}
          script: | 
            sudo docker rm -f kingwangjjang-be || true
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/kingwangjjang-be:${{ secrets.BE_DEV_VERSION }}
            docker-compose -f /home/ubuntu/kingwangjjang/docker-compose.yml down
            docker-compose -f /home/ubuntu/kingwangjjang/docker-compose.yml up -d